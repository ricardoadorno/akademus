// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
  BANNED
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String    @map("first_name")
  lastName  String    @map("last_name")
  password  String
  isActive  Boolean   @default(true) @map("is_active")
  status    UserStatus @default(PENDING)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Relations
  courses   Course[]

  @@index([email])
  @@index([status])
  @@map("users")
}

model Course {
  id        Int       @id @default(autoincrement())
  title     String
  ownerId   Int       @map("owner_id")
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  // Relations
  owner     User      @relation(fields: [ownerId], references: [id])
  nodes     Node[]

  @@index([ownerId])
  @@index([title])
  @@map("courses")
}

enum NodeType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
}

model Node {
  id          Int       @id @default(autoincrement())
  courseId    Int       @map("course_id")
  type        NodeType  @default(TEXT)
  content     String
  isFlashcard Boolean   @default(false) @map("is_flashcard")
  isQuizItem  Boolean   @default(false) @map("is_quiz_item")
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  // Relations
  course      Course    @relation(fields: [courseId], references: [id])

  @@index([courseId])
  @@map("nodes")
}
